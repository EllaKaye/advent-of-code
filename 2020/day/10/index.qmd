---
title: Day 10
date: 2020-12-10
author: 
  - name: Ella Kaye
categories:
  - base R
  - tidyverse
open-graph: true
draft: false
---

## Setup

[The original challenge](https://adventofcode.com/2020/day/10)

[My data](input){target="_blank"}

## Part 1

This is simply a case of ordering the adapters, prepending 0 and appending the max in the list plus three, then finding the differences.

```{r message = FALSE}
library(dplyr)
```

```{r message = FALSE}
adapters <- 
  here::here("2020", "day", "10", "input") %>%
  readLines() %>%
  as.integer()

adapter_diffs <- c(adapters, 0, max(adapters) + 3) %>% 
  sort() %>%
  diff()

sum(adapter_diffs == 1) * sum(adapter_diffs == 3)
```

## Part 2

Instead of building up sequences of adapters, we see what we can remove from the full list. 

First, we check the diffs: are they just 1 and 3 or are there any 2s?

```{r}
table(adapter_diffs)
```

We can't remove an adapter if its difference with the previous adapter is 3, otherwise the difference between the adapters on either side of it will be too big.

What about diffs of 1? It depends how many ones there are around it. We can check this using the `rle()` (run length encoding) function

```{r}
runs <- rle(adapter_diffs)
runs
```

What is the distribution of lengths of sequences of 1s?

```{r}
runs_table <- table(runs$lengths) 
runs_table
```

We have at most four diffs of 1 in a row.

We need to check that if we remove an adapter, the new differences do not exceed 3. Example sequences really helped me figure out what's going on here:
  
- If the diff sequence is ..., 3, 1, 3,... (e.g. adapters 1, 4, 5, 8)
  - 1 option to keep as is
  - We cannot remove any adapters
  - **1 option in total**
- If the diff sequence is ..., 3, 1, 1, 3,... (e.g. adapters 1, 4, 5, 6, 9)
  - 1 option to keep as is
  - 1 option to remove one adapter (e.g. the 5)
  - we cannot remove two adapters
  - **2 options total**
- If the diff sequence is ..., 3, 1, 1, 1, 3,... (e.g. adapters 1, 4, 5, 6, 7, 10)
  - 1 option to keep as is
  - 2 options to remove one adapter (e.g. the 5 or 6)
  - 1 options to remove two adapters (e.g. the 5 and 6)
  - We cannot remove three adapters 
  - **4 options total**
- If the diff sequence is ..., 3, 1, 1, 1, 1, 3,... (e.g. adapters 1, 4, 5, 6, 7, 8, 11)
  - 1 option to keep as is
  - 3 options to remove one adapter (e.g. 5, 6, or 7) 
  - 3 options to remove two adapters (e.g. any two of 5, 6, and 7) 
  - We cannot remove three adapters
  - **7 options total**

Finally, we multiply each run length of difference of 1s with the number of options we have for removing adapters, then take the product of those products.

```{r}
runs_df <- tibble(lengths = runs$lengths, values = runs$values)

options <- tibble(lengths = c(1,2,3,4), options = c(1,2,4,7))

runs_df %>%
  filter(values == 1) %>%
  left_join(options, by = "lengths") %>%
  summarise(prod_options = prod(options)) %>%
  pull(prod_options) %>%
  format(scientific = FALSE) 
```


##### Session info {.appendix}

<details><summary>Toggle</summary>

```{r}
#| echo: false
library(sessioninfo)
# save the session info as an object
pkg_session <- session_info(pkgs = "attached")

# get the quarto version
quarto_version <- system("quarto --version", intern = TRUE)

# inject the quarto info
pkg_session$platform$quarto <- paste(
  system("quarto --version", intern = TRUE), 
  "@", 
  quarto::quarto_path()
  )

# print it out
pkg_session
```

</details>





