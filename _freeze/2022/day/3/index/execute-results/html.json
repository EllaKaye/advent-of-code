{
  "hash": "83e745e4326f13d9f89e228f507dd64c",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"2022: Day 3\"\ndate: 2022-12-3\nauthor: \n  - name: Ella Kaye\ncategories: [base R, strings, functional programming]\ndraft: false\n---\n\n\n## Setup\n\n[The original challenge](https://adventofcode.com/2022/day/3)\n\n[My data](input){target=\"_blank\"}\n\n## Part 1\n\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(aochelpers)\ninput <- aoc_input_vector(3, 2022)\nhead(input)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"hDsDDttbhsmshNNWMNWGbTNqZq\"                      \n[2] \"VQfjnlFvnQFRdZWdVtqMGdWW\"                        \n[3] \"zvvvRnFFfjjlRBlBPzgQgRvvmtrmhHcptLHCDhcHHmLsBmsB\"\n[4] \"FrzFvvdTDcTnmTzdDTTzdvWmjhgVPrhSljSQSPwPjPjPjSVC\"\n[5] \"sMsGbqGsbbRqRbBMBGRMbLpNSSpjhlQljHVClhjgPjjPhlVp\"\n[6] \"sNbGtJbMfssNtvcnWFVmnvDd\"                        \n```\n\n\n:::\n:::\n\n\nSimilar to yesterday's strategy, we define a function to find the priority for the item in both compartments for one rucksack, then apply it to all rucksacks and find the sum. The new-to-me function today is `nchar()`, to find the number of characters in a string, which we can use with `head()` and `tail()` to split the string in half. I also learnt about `match()`,\nwhich returns the position of the first match of the first argument in the second argument.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npriority <- function(rucksack) {\n\tn <- nchar(rucksack)\n\titems <- unlist(strsplit(rucksack, \"\"))\n\titem <- intersect(head(items, n/2), tail(items, n/2))\n\tmatch(item, c(letters, LETTERS))\n}\n\nsapply(input, priority) |> sum()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 7821\n```\n\n\n:::\n:::\n\n\n\n## Part 2\n\nAnother opportunity here to use `split()`, which I learnt about on Day 1,\nthis time to split the input list into groups of three.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngroups <- split(input, rep(1:(length(input)/3), each = 3))\n```\n:::\n\n\nI then define a function to find the priority for the item shared by all three members of one group. `strsplit()` splits the group into a vector or individual items. `intersect()` only works on two vectors, so I use `Reduce()` to apply it to all three.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npriority_shared_item <- function(group) {\n\tgroup_items <- strsplit(group, \"\") \n\tcommon_item <- Reduce(intersect, group_items)\t\n\tmatch(common_item, c(letters, LETTERS))\n}\n\nsapply(groups, priority_shared_item) |> sum()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 2752\n```\n\n\n:::\n:::\n\n\n##### Session info {.appendix}\n\n<details><summary>Toggle</summary>\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n─ Session info ───────────────────────────────────────────────────────────────\n setting  value\n version  R version 4.3.1 (2023-06-16)\n os       macOS Sonoma 14.1\n system   aarch64, darwin20\n ui       X11\n language (EN)\n collate  en_US.UTF-8\n ctype    en_US.UTF-8\n tz       Europe/London\n date     2023-11-15\n pandoc   3.1.1 @ /Applications/RStudio.app/Contents/Resources/app/quarto/bin/tools/ (via rmarkdown)\n quarto   1.4.489 @ /usr/local/bin/quarto\n\n─ Packages ───────────────────────────────────────────────────────────────────\n package     * version    date (UTC) lib source\n aochelpers  * 0.0.0.9000 2023-11-15 [1] local\n sessioninfo * 1.2.2      2021-12-06 [1] CRAN (R 4.3.0)\n\n [1] /Users/ellakaye/Library/R/arm64/4.3/library\n [2] /Library/Frameworks/R.framework/Versions/4.3-arm64/Resources/library\n\n──────────────────────────────────────────────────────────────────────────────\n```\n\n\n:::\n:::\n\n\n</details>\n\n\n\n\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}