{
  "hash": "134ac9b16de046da96d4396c1c6c6c42",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"2022: Day 2\"\ndate: 2022-12-2\nauthor: \n  - name: Ella Kaye\ncategories: [base R, strings]\ndraft: false\n---\n\n\n## Setup\n\n[The original challenge](https://adventofcode.com/2022/day/2)\n\n[My data](input){target=\"_blank\"}\n\n## Part 1\n\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(aochelpers)\ninput <- aoc_input_vector(2, 2022)\nhead(input)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"A X\" \"B Y\" \"B Y\" \"C X\" \"B X\" \"C Z\"\n```\n\n\n:::\n:::\n\n\nThe strategy here is to write a function that calculates the score for each individual round, \nthen use `sapply()` to apply it to each round in the input, and finally sum the results.\nThe [script](script.R) has a few more details.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmy_score <- function(round) {\n    \n    draw <- c(\"A X\", \"B Y\", \"C Z\")\n    win <- c(\"A Y\", \"B Z\", \"C X\")\n    lose <- c(\"A Z\", \"B X\", \"C Y\")\n    \n    my_shape <- strsplit(round, \" \")[[1]][2]\n    shape_score <- switch(my_shape, \"X\" = 1, \"Y\" = 2, \"Z\" = 3)\n    \n    if (round %in% draw) outcome_score <- 3\n    else if (round %in% win) outcome_score <- 6\n    else outcome_score <- 0\n    \n    shape_score + outcome_score\n}\n\nsapply(input, my_score) |> sum()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 12794\n```\n\n\n:::\n:::\n\n\n## Part 2\n\nVery similar for part 2, expect that the interpretation of the rules is different,\nso we need to modify the function for caluclating the score.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmy_new_score <- function(round) {\n    \n    pick_scissors <- c(\"A X\", \"B Z\", \"C Y\")\n    pick_rock <- c(\"A Y\", \"B X\", \"C Z\")\n    pick_paper <- c(\"A Z\", \"B Y\", \"C X\")\n    \n    outcome <- strsplit(round, \" \")[[1]][2]\n    outcome_score <- switch(outcome, \"X\" = 0, \"Y\" = 3, \"Z\" = 6)\n    \n    if (round %in% pick_rock) shape_score <- 1\n    else if (round %in% pick_paper) shape_score <- 2\n    else shape_score <- 3\n    \n    shape_score + outcome_score\n}\n\nsapply(input, my_new_score) |> sum()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 14979\n```\n\n\n:::\n:::\n\n\n\n##### Session info {.appendix}\n\n<details><summary>Toggle</summary>\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n─ Session info ───────────────────────────────────────────────────────────────\n setting  value\n version  R version 4.3.1 (2023-06-16)\n os       macOS Sonoma 14.1\n system   aarch64, darwin20\n ui       X11\n language (EN)\n collate  en_US.UTF-8\n ctype    en_US.UTF-8\n tz       Europe/London\n date     2023-11-15\n pandoc   3.1.1 @ /Applications/RStudio.app/Contents/Resources/app/quarto/bin/tools/ (via rmarkdown)\n quarto   1.4.489 @ /usr/local/bin/quarto\n\n─ Packages ───────────────────────────────────────────────────────────────────\n package     * version    date (UTC) lib source\n aochelpers  * 0.0.0.9000 2023-11-15 [1] local\n sessioninfo * 1.2.2      2021-12-06 [1] CRAN (R 4.3.0)\n\n [1] /Users/ellakaye/Library/R/arm64/4.3/library\n [2] /Library/Frameworks/R.framework/Versions/4.3-arm64/Resources/library\n\n──────────────────────────────────────────────────────────────────────────────\n```\n\n\n:::\n:::\n\n\n</details>\n\n\n\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}