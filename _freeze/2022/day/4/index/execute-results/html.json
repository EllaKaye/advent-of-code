{
  "hash": "8faf9ac0fc675d7fb813ca17708fc0dc",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"2022: Day 4\"\ndate: 2022-12-4\nauthor: \n  - name: Ella Kaye\ncategories: [base R, strings]\ndraft: false\n---\n\n\n## Setup\n\n[The original challenge](https://adventofcode.com/2022/day/4)\n\n[My data](input){target=\"_blank\"}\n\n## Part 1\n\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(aochelpers)\n# other options: aoc_input_data_frame(), aoc_input_matrix()\ninput <- aoc_input_vector(4, 2022)\nhead(input)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"36-92,35-78\" \"26-31,25-27\" \"17-72,16-71\" \"3-77,76-90\"  \"20-22,21-87\"\n[6] \"5-75,6-75\"  \n```\n\n\n:::\n:::\n\n\nFirst, we separate the input into a list, where each element is a vector of length 4 of the integers in the input. The regular expression `\\D` matches any non-digit character, and `strsplit` splits the input on these. Next, we write a function that takes one of these vectors, and checks whether the range defined by first two integers is contained in the range defined by the second two, or vice versa. Finally, we use `sapply` to apply this function to each element of the list, and the `sum` of a logical vector is equivalent to counting how many are `TRUE`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nall_ints <- strsplit(input, \"\\\\D\")\n\nrange_contain <- function(ints) {\n\tall(ints[1]:ints[2] %in% ints[3]:ints[4]) || all(ints[3]:ints[4] %in% ints[1]:ints[2])\n}\n\nsapply(all_ints, range_contain) |> sum()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 494\n```\n\n\n:::\n:::\n\n\n## Part 2\n\nPart 2 is almost identical, except we're checking for any overlap in the ranges.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrange_overlap <- function(ints) {\n\tany(ints[1]:ints[2] %in% ints[3]:ints[4])\n}\n\nsapply(all_ints, range_overlap) |> sum()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 833\n```\n\n\n:::\n:::\n\n\n\n\n##### Session info {.appendix}\n\n<details><summary>Toggle</summary>\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n─ Session info ───────────────────────────────────────────────────────────────\n setting  value\n version  R version 4.3.1 (2023-06-16)\n os       macOS Sonoma 14.1\n system   aarch64, darwin20\n ui       X11\n language (EN)\n collate  en_US.UTF-8\n ctype    en_US.UTF-8\n tz       Europe/London\n date     2023-11-18\n pandoc   3.1.1 @ /Applications/RStudio.app/Contents/Resources/app/quarto/bin/tools/ (via rmarkdown)\n quarto   1.4.504 @ /usr/local/bin/quarto\n\n─ Packages ───────────────────────────────────────────────────────────────────\n package     * version    date (UTC) lib source\n aochelpers  * 0.0.0.9000 2023-11-17 [1] local\n sessioninfo * 1.2.2      2021-12-06 [1] CRAN (R 4.3.0)\n\n [1] /Users/ellakaye/Library/R/arm64/4.3/library\n [2] /Library/Frameworks/R.framework/Versions/4.3-arm64/Resources/library\n\n──────────────────────────────────────────────────────────────────────────────\n```\n\n\n:::\n:::\n\n\n</details>\n\n\n\n\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}