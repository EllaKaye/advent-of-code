{
  "hash": "b9d7fbcd746c5be906e0f2ea7f7bb8c7",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"2023: Day 25\"\ndate: 2023-12-25\nauthor: \n  - name: Ella Kaye\ncategories: [tidyverse, graphs, igraph, ⭐]\ndraft: false\n---\n\n\n## Setup\n\n[The original challenge](https://adventofcode.com/2023/day/25)\n\n[My data](input){target=\"_blank\"}\n\n## Part 1\n\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(aochelpers)\ninput <- aoc_input_vector(25, 2023)\nhead(input)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"nkv: svc cdq zrx\"             \"hkd: nlx qbm dzc\"            \n[3] \"xkh: cvb jhn\"                 \"gtl: nhn bbv gfj szb xbt hcr\"\n[5] \"mfc: gfk svv\"                 \"tjm: ktm nhs\"                \n```\n\n\n:::\n:::\n\n\n::: {.callout-note collapse=\"false\" icon=\"false\"}\n## The crux of the puzzle\nGiven a graph, remove three edges to split the graph into two separate disconnected groups, then multiply the sizes of those groups together.\n:::\n\nLearning graph theory at 6am -- that's quite a start to a Christmas day!\n\nAt first, I had no idea how to approach this problem and figured there must be some graph theory that would achieve exactly what was required, \npreferably with an algorithm already implemented in the [**igraph**](https://r.igraph.org) package. \nA bit of googling and I was in luck: we need a [minimum cut](https://en.wikipedia.org/wiki/Minimum_cut). \nIn this case, the minimum number of edges that can be removed to split the graph into two groups.^[The graph-theoretic term for these groups is *components* but presumably that's not being used so as not to cause confusion with the machine components in the puzzle text.] \nThis is implemented in **igraph** with the `min_cut()` function,\nwhich can include in its output the nodes in each group. \nWe then multiply the lengths of these vectors together for the puzzle answer. \nBefore that, the new family of `separate_*` functions in **tidyr** makes it easy to wrangle the input into a two-column data frame representing edges, which we turn to a matrix to make it acceptable for `matrix_from_edgelist()`. \nPutting it together, the solution is concise and very fast, \nwhich is just as well because it's Christmas Day and I don't have a lot of time for coding!\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(igraph)\n\ninput_tbl <- input |> \n\tas_tibble() |> \n\tseparate_wider_delim(value, \":\", names = c(\"from\", \"to\")) |> \n\tseparate_longer_delim(to, \" \") |> \n\tfilter(to != \"\")\n\nedgelist <- as.matrix(input_tbl)\ncomp_graph <- graph_from_edgelist(edgelist, directed = FALSE)\ngroups <- min_cut(comp_graph, value.only = FALSE)\nlength(groups$partition1) * length(groups$partition2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 569904\n```\n\n\n:::\n:::\n\n\n\n## Part 2\n\n::: {.callout-note collapse=\"false\" icon=\"false\"}\n## The crux of the puzzle\nHave solved all other problems!\n:::\n\nSo much for not much coding required to complete Day 25! \nThere's no additional puzzle for the final star -- we only need to have aquired the previous 49 stars.\n\nAs of Christmas Day 2023, I have 30 gold stars -- 19 to go! \nThat's a task for another day.\n\nHappy holidays!\n\n##### Session info {.appendix}\n\n<details><summary>Toggle</summary>\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n─ Session info ───────────────────────────────────────────────────────────────\n setting  value\n version  R version 4.3.2 (2023-10-31)\n os       macOS Sonoma 14.1\n system   aarch64, darwin20\n ui       X11\n language (EN)\n collate  en_US.UTF-8\n ctype    en_US.UTF-8\n tz       Europe/London\n date     2023-12-25\n pandoc   3.1.1 @ /Applications/RStudio.app/Contents/Resources/app/quarto/bin/tools/ (via rmarkdown)\n quarto   1.4.526 @ /usr/local/bin/quarto\n\n─ Packages ───────────────────────────────────────────────────────────────────\n package     * version    date (UTC) lib source\n aochelpers  * 0.1.0.9000 2023-12-24 [1] local\n dplyr       * 1.1.4      2023-11-17 [1] CRAN (R 4.3.1)\n forcats     * 1.0.0      2023-01-29 [1] CRAN (R 4.3.0)\n ggplot2     * 3.4.4      2023-10-12 [1] CRAN (R 4.3.1)\n igraph      * 1.5.1      2023-08-10 [1] CRAN (R 4.3.0)\n lubridate   * 1.9.3      2023-09-27 [1] CRAN (R 4.3.1)\n purrr       * 1.0.2      2023-08-10 [1] CRAN (R 4.3.0)\n readr       * 2.1.4      2023-02-10 [1] CRAN (R 4.3.0)\n sessioninfo * 1.2.2      2021-12-06 [1] CRAN (R 4.3.0)\n stringr     * 1.5.1      2023-11-14 [1] CRAN (R 4.3.1)\n tibble      * 3.2.1      2023-03-20 [1] CRAN (R 4.3.0)\n tidyr       * 1.3.0      2023-01-24 [1] CRAN (R 4.3.0)\n tidyverse   * 2.0.0      2023-02-22 [1] CRAN (R 4.3.0)\n\n [1] /Users/ellakaye/Library/R/arm64/4.3/library\n [2] /Library/Frameworks/R.framework/Versions/4.3-arm64/Resources/library\n\n──────────────────────────────────────────────────────────────────────────────\n```\n\n\n:::\n:::\n\n\n</details>\n\n\n\n\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}