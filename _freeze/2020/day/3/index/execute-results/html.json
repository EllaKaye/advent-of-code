{
  "hash": "65b576feaab9a9da9d2a5803d7f1af3f",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"2020: Day 3\"\ndate: 2020-12-3\nauthor: \n  - name: Ella Kaye\ncategories:\n  - tidyverse\n  - matrix\nopen-graph: true\ndraft: false\n---\n\n\n## Setup\n\n[The original challenge](https://adventofcode.com/2020/day/3)\n\n[My data](input){target=\"_blank\"}\n\n## Part 1\n\nStarting at the top left corner of the map, how many trees (\"#\") do we encounter, going at a trajectory of 3 right and 1 down?\n\nFirst, read in the data and save it into a matrix. My method here feels really hack-y. I'm sure there must be a better approach. \n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n\ntree_map <- \n  read_tsv(here::here(\"2020\", \"day\", \"3\", \"input\"), col_names = FALSE)\n\nnum_col <- tree_map %>%\n  mutate(length = str_length(X1)) %>%\n  slice(1) %>%\n  pull(length)\n\ntree_vec <- tree_map %>%\n  mutate(X1 = strsplit(X1, split = character(0), fixed = TRUE)) %>%\n  pull(X1) %>%\n  unlist()\n\ntree_mat <- matrix(tree_vec, ncol = num_col, byrow = TRUE)\n```\n:::\n\n\nNow work my way across and down the matrix, using the `%%` modulo operator to loop round where necessary. The `-1` and `+1` in the line `((y + right - 1) %% num_col) + 1` is a hack to get round the fact that, for `num_col` columns, the modulo runs from `0` to `num_col - 1`, but the column indexes for our matrix run from `1` to `num_col`.  \n\n\n::: {.cell}\n\n```{.r .cell-code}\nright <- 3\ndown <- 1\n\nnum_rows <- nrow(tree_mat)\nnum_col <- ncol(tree_mat)\n\n# start counting trees encountered\ntrees <- 0\n\n# start square\nx <- 1\ny <- 1\n  \nwhile (x <= num_rows) {\n  \n  # cat(\"row: \", x, \"col: \", y, \"\\n\")\n  \n  if (tree_mat[x,y] == \"#\") trees <- trees + 1\n  \n  x <- x + down\n  y <- ((y + right - 1) %% num_col) + 1\n  \n}\n\ntrees\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 299\n```\n\n\n:::\n:::\n\n\n## Part 2\n\nWe now need to check several other trajectories, and multiply together the number of trees we find, so we wrap the Part 1 code into a function.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nslope_check <- function(tree_mat, right, down) {\n  \n  num_rows <- nrow(tree_mat)\n  num_col <- ncol(tree_mat)\n\n  # start counting trees encountered\n  trees <- 0\n\n  # start square\n  x <- 1\n  y <- 1\n  \n  while (x <= num_rows) {\n  \n    if (tree_mat[x,y] == \"#\") trees <- trees + 1\n  \n    x <- x + down\n    y <- ((y + right - 1) %% num_col) + 1\n  \n  }\n  trees\n}\n\nprod(slope_check(tree_mat, 1, 1),\n     slope_check(tree_mat, 3, 1),\n     slope_check(tree_mat, 5, 1),\n     slope_check(tree_mat, 7, 1),\n     slope_check(tree_mat, 1, 2))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 3621285278\n```\n\n\n:::\n:::\n\n\n\n\n\n##### Session info {.appendix}\n\n<details><summary>Toggle</summary>\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n─ Session info ───────────────────────────────────────────────────────────────\n setting  value\n version  R version 4.3.1 (2023-06-16)\n os       macOS Sonoma 14.0\n system   aarch64, darwin20\n ui       X11\n language (EN)\n collate  en_US.UTF-8\n ctype    en_US.UTF-8\n tz       Europe/London\n date     2023-11-06\n pandoc   3.1.1 @ /Applications/RStudio.app/Contents/Resources/app/quarto/bin/tools/ (via rmarkdown)\n quarto   1.4.466 @ /usr/local/bin/quarto\n\n─ Packages ───────────────────────────────────────────────────────────────────\n package     * version date (UTC) lib source\n dplyr       * 1.1.2   2023-04-20 [1] CRAN (R 4.3.0)\n forcats     * 1.0.0   2023-01-29 [1] CRAN (R 4.3.0)\n ggplot2     * 3.4.2   2023-04-03 [1] CRAN (R 4.3.0)\n lubridate   * 1.9.2   2023-02-10 [1] CRAN (R 4.3.0)\n purrr       * 1.0.1   2023-01-10 [1] CRAN (R 4.3.0)\n readr       * 2.1.4   2023-02-10 [1] CRAN (R 4.3.0)\n sessioninfo * 1.2.2   2021-12-06 [1] CRAN (R 4.3.0)\n stringr     * 1.5.0   2022-12-02 [1] CRAN (R 4.3.0)\n tibble      * 3.2.1   2023-03-20 [1] CRAN (R 4.3.0)\n tidyr       * 1.3.0   2023-01-24 [1] CRAN (R 4.3.0)\n tidyverse   * 2.0.0   2023-02-22 [1] CRAN (R 4.3.0)\n\n [1] /Users/ellakaye/Library/R/arm64/4.3/library\n [2] /Library/Frameworks/R.framework/Versions/4.3-arm64/Resources/library\n\n──────────────────────────────────────────────────────────────────────────────\n```\n\n\n:::\n:::\n\n\n</details>\n\n\n\n\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}