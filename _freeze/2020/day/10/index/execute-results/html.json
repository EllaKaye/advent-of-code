{
  "hash": "e02a4236d1e4cb3a749ee838645d4c49",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: Day 10\ndate: 2020-12-10\nauthor: \n  - name: Ella Kaye\ncategories:\n  - base R\n  - tidyverse\nopen-graph: true\ndraft: false\n---\n\n\n## Setup\n\n[The original challenge](https://adventofcode.com/2020/day/10)\n\n[My data](input)\n\n## Part 1\n\nThis is simply a case of ordering the adapters, prepending 0 and appending the max in the list plus three, then finding the differences.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(dplyr)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nadapters <- \n  here::here(\"2020\", \"day\", \"10\", \"input\") %>%\n  readLines() %>%\n  as.integer()\n\nadapter_diffs <- c(adapters, 0, max(adapters) + 3) %>% \n  sort() %>%\n  diff()\n\nsum(adapter_diffs == 1) * sum(adapter_diffs == 3)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 3034\n```\n\n\n:::\n:::\n\n\n## Part 2\n\nInstead of building up sequences of adapters, we see what we can remove from the full list. \n\nFirst, we check the diffs: are they just 1 and 3 or are there any 2s?\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntable(adapter_diffs)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nadapter_diffs\n 1  3 \n74 41 \n```\n\n\n:::\n:::\n\n\nWe can't remove an adapter if its difference with the previous adapter is 3, otherwise the difference between the adapters on either side of it will be too big.\n\nWhat about diffs of 1? It depends how many ones there are around it. We can check this using the `rle()` (run length encoding) function\n\n\n::: {.cell}\n\n```{.r .cell-code}\nruns <- rle(adapter_diffs)\nruns\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRun Length Encoding\n  lengths: int [1:48] 3 2 4 2 4 2 4 1 4 2 ...\n  values : num [1:48] 1 3 1 3 1 3 1 3 1 3 ...\n```\n\n\n:::\n:::\n\n\nWhat is the distribution of lengths of sequences of 1s?\n\n\n::: {.cell}\n\n```{.r .cell-code}\nruns_table <- table(runs$lengths) \nruns_table\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n 1  2  3  4 \n13 14 10 11 \n```\n\n\n:::\n:::\n\n\nWe have at most four diffs of 1 in a row.\n\nWe need to check that if we remove an adapter, the new differences do not exceed 3. Example sequences really helped me figure out what's going on here:\n  \n- If the diff sequence is ..., 3, 1, 3,... (e.g. adapters 1, 4, 5, 8)\n  - 1 option to keep as is\n  - We cannot remove any adapters\n  - **1 option in total**\n- If the diff sequence is ..., 3, 1, 1, 3,... (e.g. adapters 1, 4, 5, 6, 9)\n  - 1 option to keep as is\n  - 1 option to remove one adapter (e.g. the 5)\n  - we cannot remove two adapters\n  - **2 options total**\n- If the diff sequence is ..., 3, 1, 1, 1, 3,... (e.g. adapters 1, 4, 5, 6, 7, 10)\n  - 1 option to keep as is\n  - 2 options to remove one adapter (e.g. the 5 or 6)\n  - 1 options to remove two adapters (e.g. the 5 and 6)\n  - We cannot remove three adapters \n  - **4 options total**\n- If the diff sequence is ..., 3, 1, 1, 1, 1, 3,... (e.g. adapters 1, 4, 5, 6, 7, 8, 11)\n  - 1 option to keep as is\n  - 3 options to remove one adapter (e.g. 5, 6, or 7) \n  - 3 options to remove two adapters (e.g. any two of 5, 6, and 7) \n  - We cannot remove three adapters\n  - **7 options total**\n\nFinally, we multiply each run length of difference of 1s with the number of options we have for removing adapters, then take the product of those products.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nruns_df <- tibble(lengths = runs$lengths, values = runs$values)\n\noptions <- tibble(lengths = c(1,2,3,4), options = c(1,2,4,7))\n\nruns_df %>%\n  filter(values == 1) %>%\n  left_join(options, by = \"lengths\") %>%\n  summarise(prod_options = prod(options)) %>%\n  pull(prod_options) %>%\n  format(scientific = FALSE) \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"259172170858496\"\n```\n\n\n:::\n:::\n\n\n\n##### Session info {.appendix}\n\n<details><summary>Toggle</summary>\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n─ Session info ───────────────────────────────────────────────────────────────\n setting  value\n version  R version 4.3.1 (2023-06-16)\n os       macOS Sonoma 14.0\n system   aarch64, darwin20\n ui       X11\n language (EN)\n collate  en_US.UTF-8\n ctype    en_US.UTF-8\n tz       Europe/London\n date     2023-11-01\n pandoc   3.1.1 @ /Applications/RStudio.app/Contents/Resources/app/quarto/bin/tools/ (via rmarkdown)\n quarto   1.4.466 @ /usr/local/bin/quarto\n\n─ Packages ───────────────────────────────────────────────────────────────────\n package     * version date (UTC) lib source\n dplyr       * 1.1.2   2023-04-20 [1] CRAN (R 4.3.0)\n sessioninfo * 1.2.2   2021-12-06 [1] CRAN (R 4.3.0)\n\n [1] /Users/ellakaye/Library/R/arm64/4.3/library\n [2] /Library/Frameworks/R.framework/Versions/4.3-arm64/Resources/library\n\n──────────────────────────────────────────────────────────────────────────────\n```\n\n\n:::\n:::\n\n\n</details>\n\n\n\n\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}