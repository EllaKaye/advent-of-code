{
  "hash": "46dc490a42f74f8c439835790104afca",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: Day 6\ndate: 2020-12-6\nauthor: \n  - name: Ella Kaye\ncategories:\n  - tidyverse\nopen-graph: true\ndraft: false\n---\n\n\n## Setup\n\n[The original challenge](https://adventofcode.com/2020/day/6)\n\n[My data](input){target=\"_blank\"}\n\n## Part 1\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(stringr)\n```\n:::\n\n\nWithin each group, we need to find the number of unique letters within each group. We read in and separate the data using the tricks learnt for [Day 4](../4/index.qmd), and take advantage of the `rowwise()` feature in `dplyr 1.0.0`. \n\n\n::: {.cell}\n\n```{.r .cell-code}\ncustoms_groups <- \n  readLines(here::here(\"2020\", \"day\", \"6\", \"input\")) %>%\n  as_tibble() %>%\n  mutate(new_group = value == \"\") %>%\n  mutate(group_ID = cumsum(new_group) + 1) %>%\n  filter(!new_group) %>%\n  select(-new_group) %>%\n  group_by(group_ID) \n\ncustoms_groups %>%\n  summarise(qs = str_c(value, collapse = \"\")) %>%\n  ungroup() %>%\n  mutate(qss = str_split(qs, \"\")) %>%\n  rowwise() %>%\n  mutate(qsu = list(unique(qss))) %>%\n  mutate(count = length(qsu)) %>%\n  ungroup() %>%\n  summarise(total = sum(count)) %>%\n  pull(total)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 6585\n```\n\n\n:::\n:::\n\n\n## Part 2\n\nNow, instead of unique letters in a group, we need to find the number of letters which appear in all the answers for everyone in the same group. I first note how many people are in each group, then tabulate the number of occurrences of each letter in the group, then count (by summing a logical vector) the number of matches between occurrences of letter and the number in group. Finally, we sum across all groups.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncustoms_groups %>%  \n  add_count(group_ID, name = \"num_in_group\") %>%\n  group_by(group_ID, num_in_group) %>%\n  summarise(qs = str_c(value, collapse = \"\")) %>%\n  ungroup() %>%\n  mutate(qss = str_split(qs, \"\")) %>%\n  rowwise() %>%\n  mutate(letter_table = list(table(qss))) %>%\n  slice(1) %>%\n  mutate(in_common = sum(num_in_group == letter_table)) %>%\n  ungroup() %>%\n  summarise(total = sum(in_common)) %>%\n  pull(total)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 3276\n```\n\n\n:::\n:::\n\n\n##### Session info {.appendix}\n\n<details><summary>Toggle</summary>\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n─ Session info ───────────────────────────────────────────────────────────────\n setting  value\n version  R version 4.3.1 (2023-06-16)\n os       macOS Sonoma 14.0\n system   aarch64, darwin20\n ui       X11\n language (EN)\n collate  en_US.UTF-8\n ctype    en_US.UTF-8\n tz       Europe/London\n date     2023-11-05\n pandoc   3.1.1 @ /Applications/RStudio.app/Contents/Resources/app/quarto/bin/tools/ (via rmarkdown)\n quarto   1.4.466 @ /usr/local/bin/quarto\n\n─ Packages ───────────────────────────────────────────────────────────────────\n package     * version date (UTC) lib source\n dplyr       * 1.1.2   2023-04-20 [1] CRAN (R 4.3.0)\n sessioninfo * 1.2.2   2021-12-06 [1] CRAN (R 4.3.0)\n stringr     * 1.5.0   2022-12-02 [1] CRAN (R 4.3.0)\n tidyr       * 1.3.0   2023-01-24 [1] CRAN (R 4.3.0)\n\n [1] /Users/ellakaye/Library/R/arm64/4.3/library\n [2] /Library/Frameworks/R.framework/Versions/4.3-arm64/Resources/library\n\n──────────────────────────────────────────────────────────────────────────────\n```\n\n\n:::\n:::\n\n\n</details>\n\n\n\n\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}